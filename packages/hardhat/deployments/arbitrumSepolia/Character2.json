{
  "address": "0x8eDCE05d3Ef014C8BeAE055DeaA48527C69E5Cf3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colorNames",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "generateCharacter",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prevEntropy",
          "type": "uint256"
        }
      ],
      "name": "generateRandomNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x07d68bba64a9a3842976507339e892051ac088dab4bd4b130ae6a6181e95605d",
  "receipt": {
    "to": null,
    "from": "0xd6BdCd93C6D70d4455B0975a8e4169993a1383d7",
    "contractAddress": "0x8eDCE05d3Ef014C8BeAE055DeaA48527C69E5Cf3",
    "transactionIndex": 1,
    "gasUsed": "123509917",
    "logsBloom": "0x
    "blockHash": "0xa3ebbbc488dbe70a562471028b2cc68a5de85c747b549272b4518141340626ca",
    "transactionHash": "0x07d68bba64a9a3842976507339e892051ac088dab4bd4b130ae6a6181e95605d",
    "logs": [],
    "blockNumber": 15290957,
    "cumulativeGasUsed": "123509917",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "95ab2789a72900d28373809b7fe7962c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"colorNames\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"generateCharacter\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prevEntropy\",\"type\":\"uint256\"}],\"name\":\"generateRandomNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Character2.sol\":\"Character2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Base64.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides a set of functions to operate with Base64 strings.\\n */\\nlibrary Base64 {\\n    /**\\n     * @dev Base64 Encoding/Decoding Table\\n     */\\n    string internal constant _TABLE = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n\\n    /**\\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\\n     */\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        /**\\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\\n         */\\n        if (data.length == 0) return \\\"\\\";\\n\\n        // Loads the table into memory\\n        string memory table = _TABLE;\\n\\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\\n        // and split into 4 numbers of 6 bits.\\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\\n        // - `data.length + 2`  -> Round up\\n        // - `/ 3`              -> Number of 3-bytes chunks\\n        // - `4 *`              -> 4 characters for each chunk\\n        string memory result = new string(4 * ((data.length + 2) / 3));\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Prepare the lookup table (skip the first \\\"length\\\" byte)\\n            let tablePtr := add(table, 1)\\n\\n            // Prepare result pointer, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // Run over the input, 3 bytes at a time\\n            for {\\n                let dataPtr := data\\n                let endPtr := add(data, mload(data))\\n            } lt(dataPtr, endPtr) {\\n\\n            } {\\n                // Advance 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // To write each character, shift the 3 bytes (18 bits) chunk\\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\\n                // and apply logical AND with 0x3F which is the number of\\n                // the previous character in the ASCII table prior to the Base64 Table\\n                // The result is then added to the table to get the character to write,\\n                // and finally write it in the result pointer but with a left shift\\n                // of 256 (1 byte) - 8 (1 ASCII char) = 248 bits\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n            }\\n\\n            // When data `bytes` is not exactly 3 bytes long\\n            // it is padded with `=` characters at the end\\n            switch mod(mload(data), 3)\\n            case 1 {\\n                mstore8(sub(resultPtr, 1), 0x3d)\\n                mstore8(sub(resultPtr, 2), 0x3d)\\n            }\\n            case 2 {\\n                mstore8(sub(resultPtr, 1), 0x3d)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x6f7014d688c4386c26e8c02371ecb7f7740d2542f1ecadffd5a3084511e2a344\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"},\"contracts/Character2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Base64.sol\\\";\\n\\ncontract Character2 {\\n    //YATTATCHI\\n    using Strings for uint256;\\n\\n    string[10] public colorNames = [\\n        \\\"FFFFFF\\\",\\n        \\\"FF0000\\\",\\n        \\\"008000\\\",\\n        \\\"0000FF\\\",\\n        \\\"FFFF00\\\",\\n        \\\"00FFFF\\\",\\n        \\\"800000\\\",\\n        \\\"808000\\\",\\n        \\\"800080\\\",\\n        \\\"808080\\\"\\n    ];\\n\\n    function generateRandomNumber(\\n        uint256 prevEntropy\\n    ) public view returns (uint256) {\\n        uint256 randomNumber = uint256(\\n            keccak256(\\n                abi.encode(\\n                    prevEntropy,\\n                    block.timestamp,\\n                    block.prevrandao,\\n                    blockhash(block.number - 1)\\n                )\\n            )\\n        );\\n        return uint256(randomNumber % 10);\\n    }\\n\\n    function generateCharacter() public view returns (string memory) {\\n        string[3] memory colors;\\n        uint256[3] memory previous;\\n        previous[0] = generateRandomNumber(0);\\n        colors[0] = colorNames[previous[0]];\\n        previous[1] = generateRandomNumber(previous[0]);\\n        colors[1] = colorNames[generateRandomNumber(previous[1])];\\n        previous[2] = generateRandomNumber(previous[1]);\\n        colors[2] = colorNames[generateRandomNumber(previous[2])];\\n        bytes memory svg = abi.encodePacked(\\n            '<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" width=\\\"500px\\\" height=\\\"500px\\\" style=\\\"shape-rendering:geometricPrecision; text-rendering:geometricPrecision; image-rendering:optimizeQuality; fill-rule:evenodd; clip-rule:evenodd\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">',\\n            '<g><path style=\\\"opacity:0.954\\\" fill=\\\"#124d84\\\" d=\\\"M 247.5,57.5 C 252.941,57.2651 257.274,59.2651 260.5,63.5C 274.405,57.11 280.405,61.4434 278.5,76.5C 287.032,77.1884 290.532,81.8551 289,90.5C 288.727,92.3289 287.893,93.8289 286.5,95C 294.363,101.592 294.363,108.258 286.5,115C 277.12,118.625 267.953,118.125 259,113.5C 255.176,120.446 252.009,127.78 249.5,135.5C 291.512,131.763 326.678,145.43 355,176.5C 359.389,181.889 363.389,187.556 367,193.5C 374.49,188.853 381.157,189.853 387,196.5C 388.629,192.069 391.129,188.236 394.5,185C 405.227,180.863 411.894,184.363 414.5,195.5C 414.167,196.167 413.833,196.833 413.5,197.5C 416.885,197.312 420.218,198.146 423.5,200C 427.192,204.852 428.192,210.185 426.5,216C 433.715,221.213 435.382,227.879 431.5,236C 432.045,239.187 432.711,242.354 433.5,245.5C 446.709,252.556 454.543,263.556 457,278.5C 461.855,306.93 454.688,331.764 435.5,353C 413.88,370.215 390.213,373.882 364.5,364C 358.658,360.246 352.991,356.246 347.5,352C 343.578,348.749 340.412,344.916 338,340.5C 320.45,358.192 299.283,368.859 274.5,372.5C 278.421,382.425 282.255,392.425 286,402.5C 291.219,419.895 285.385,431.729 268.5,438C 250.259,442.306 231.925,442.639 213.5,439C 205.084,437.715 198.584,433.548 194,426.5C 192.098,410.388 199.265,401.221 215.5,399C 228.239,398.082 240.572,399.915 252.5,404.5C 252.833,404.167 253.167,403.833 253.5,403.5C 251.303,396.077 248.803,388.744 246,381.5C 245.505,379.527 245.338,377.527 245.5,375.5C 218.904,375.776 196.07,366.776 177,348.5C 168.512,356.321 160.012,364.154 151.5,372C 139.732,377.091 128.399,376.091 117.5,369C 99.0415,356.878 88.3748,339.878 85.5,318C 86.9369,302.447 95.2702,296.447 110.5,300C 117.479,302.641 122.979,307.141 127,313.5C 133.251,322.999 139.251,332.666 145,342.5C 150.533,337.302 155.7,331.802 160.5,326C 151.085,310.177 146.418,293.01 146.5,274.5C 132.351,273.431 119.351,268.931 107.5,261C 97.4618,254.635 88.2952,247.135 80,238.5C 71.9835,227.2 72.8169,216.7 82.5,207C 87.3759,204.264 92.3759,203.93 97.5,206C 115.321,219.247 134.654,229.914 155.5,238C 159.05,238.784 162.55,239.617 166,240.5C 169.682,236.985 173.182,233.318 176.5,229.5C 153.538,223.185 132.204,213.352 112.5,200C 94.4248,185.044 87.9248,166.211 93,143.5C 100.507,129.831 112.007,124.331 127.5,127C 132.373,127.884 137.04,129.384 141.5,131.5C 149.477,116.072 162.31,107.739 180,106.5C 196.162,107.911 208.828,115.244 218,128.5C 221.047,117.358 224.88,106.525 229.5,96C 217.125,88.4143 215.459,79.081 224.5,68C 229.055,66.0483 233.388,66.5483 237.5,69.5C 238.405,63.2771 241.739,59.2771 247.5,57.5 Z\\\"/></g>',\\n            '<g fill=\\\"#',\\n            colors[0],\\n            '\\\">',\\n            '<path style=\\\"opacity:1\\\" d=\\\"M 247.5,66.5 C 249.144,66.2865 250.644,66.6198 252,67.5C 252.333,71.8333 252.667,76.1667 253,80.5C 254.581,83.5534 256.914,84.22 260,82.5C 260.84,78.9367 262.174,75.6034 264,72.5C 265.87,70.7811 268.037,69.7811 270.5,69.5C 269.614,74.9402 266.947,79.2735 262.5,82.5C 261.098,85.9696 262.264,88.303 266,89.5C 270.597,87.2446 275.43,85.9113 280.5,85.5C 280.657,86.8734 280.49,88.2068 280,89.5C 276.814,92.0039 273.981,94.8373 271.5,98C 272.101,99.605 273.101,100.938 274.5,102C 277.224,102.27 279.891,102.77 282.5,103.5C 283.583,104.365 283.749,105.365 283,106.5C 279.961,107.608 276.794,108.275 273.5,108.5C 268.377,107.071 263.21,105.738 258,104.5C 253.265,104.565 250.265,106.898 249,111.5C 245.47,120.423 242.137,129.423 239,138.5C 234.97,140.456 230.803,142.122 226.5,143.5C 225.34,139.541 225.173,135.541 226,131.5C 228.868,123.228 231.535,114.895 234,106.5C 236.053,102.226 238.219,98.0597 240.5,94C 240.415,92.8926 240.081,91.8926 239.5,91C 235.581,89.4597 232.081,87.2931 229,84.5C 226.87,81.3351 227.037,78.3351 229.5,75.5C 233.167,77.6667 236.833,79.8333 240.5,82C 242.701,82.8249 244.534,82.3249 246,80.5C 246.223,75.7503 246.723,71.0836 247.5,66.5 Z\\\"/>',\\n            '<path style=\\\"opacity:1\\\" d=\\\"M 400.5,191.5 C 403.485,191.818 405.152,193.485 405.5,196.5C 404.631,199.941 403.464,203.274 402,206.5C 400.087,212.094 401.92,214.261 407.5,213C 410.941,211.224 414.108,209.057 417,206.5C 418.518,208.614 418.851,210.947 418,213.5C 407.815,224.075 409.982,228.075 424.5,225.5C 424.5,226.833 424.5,228.167 424.5,229.5C 422.143,229.337 419.81,229.503 417.5,230C 414.833,232.667 414.833,235.333 417.5,238C 420.007,238.093 422.174,238.926 424,240.5C 424.711,242.367 424.211,243.867 422.5,245C 412.478,245.486 402.478,246.153 392.5,247C 390.264,250.145 388.764,253.645 388,257.5C 379.196,269.604 370.029,281.438 360.5,293C 351.87,299.961 343.537,307.295 335.5,315C 328.82,320.56 321.154,322.893 312.5,322C 311.833,321.333 311.167,320.667 310.5,320C 320.617,316.525 329.117,310.691 336,302.5C 350.079,282.68 363.413,262.346 376,241.5C 379.439,235.794 381.273,229.627 381.5,223C 381.586,216.338 379.086,210.838 374,206.5C 371.188,201.769 372.355,199.602 377.5,200C 379.833,202.333 382.167,204.667 384.5,207C 386.914,208.885 389.581,209.552 392.5,209C 394.139,205.741 395.306,202.241 396,198.5C 397.012,195.798 398.512,193.465 400.5,191.5 Z\\\"/>',\\n            \\\"</g>\\\",\\n            '<g><path style=\\\"opacity:1\\\" fill=\\\"#e40513\\\" d=\\\"M 174.5,115.5 C 187.22,115.238 198.054,119.571 207,128.5C 210.111,132.387 212.444,136.72 214,141.5C 214.755,144.303 214.422,146.97 213,149.5C 205.068,155.428 197.735,162.095 191,169.5C 178.588,157.306 165.254,146.306 151,136.5C 150.875,131.253 153.041,127.087 157.5,124C 162.98,120.593 168.647,117.76 174.5,115.5 Z\\\"/></g>',\\n            '<g><path style=\\\"opacity:1\\\" fill=\\\"#e50212\\\" d=\\\"M 114.5,135.5 C 124.772,134.985 134.439,137.151 143.5,142C 158.658,151.817 172.658,163.151 185.5,176C 188.508,178.754 192.008,180.587 196,181.5C 200.403,180.412 201.57,177.745 199.5,173.5C 208.188,162.001 219.521,154.167 233.5,150C 271.73,138.312 306.063,145.312 336.5,171C 352.436,184.037 362.936,200.537 368,220.5C 369.145,225.799 369.478,231.132 369,236.5C 356.996,257.182 343.996,277.182 330,296.5C 322.411,305.1 313.077,310.766 302,313.5C 300.473,321.28 303.306,326.78 310.5,330C 315.5,330.667 320.5,330.667 325.5,330C 331.449,328.027 336.783,325.027 341.5,321C 353.604,310.899 365.104,300.065 376,288.5C 381.947,279.553 388.28,270.886 395,262.5C 396.741,259.691 397.908,256.691 398.5,253.5C 408.088,255.115 417.588,254.781 427,252.5C 439.637,258.489 446.97,268.489 449,282.5C 451.7,303.709 447.034,323.042 435,340.5C 420.213,356.081 402.046,362.914 380.5,361C 367.466,356.303 356.3,348.803 347,338.5C 346.414,329.323 342.247,327.156 334.5,332C 314.682,351.906 290.682,363.24 262.5,366C 219.539,371.602 187.372,355.768 166,318.5C 157.189,301.979 154.189,284.646 157,266.5C 155.915,265.707 154.748,265.04 153.5,264.5C 148.283,266.945 142.949,267.111 137.5,265C 118.68,258.496 102.18,248.329 88,234.5C 84.5926,230.372 82.926,225.705 83,220.5C 84.578,215.131 88.078,212.965 93.5,214C 109.009,224.926 125.342,234.593 142.5,243C 151.409,247.23 160.742,248.896 170.5,248C 177.017,242.148 182.85,235.648 188,228.5C 188.92,225.692 188.087,223.525 185.5,222C 181.251,220.874 176.918,220.208 172.5,220C 155.533,213.683 139.199,206.016 123.5,197C 107.033,185.899 99.1994,170.399 100,150.5C 102.351,142.984 107.184,137.984 114.5,135.5 Z\\\"/></g>',\\n            '<g><path style=\\\"opacity:1\\\" fill=\\\"#174c83\\\" d=\\\"M 229.5,170.5 C 243.441,168.702 248.941,174.702 246,188.5C 242.983,201.252 235.483,205.418 223.5,201C 216.507,193.905 215.673,186.071 221,177.5C 223.628,174.79 226.461,172.456 229.5,170.5 Z\\\"/></g>',\\n            '<g><path style=\\\"opacity:1\\\" fill=\\\"#154c83\\\" d=\\\"M 297.5,232.5 C 306.26,232.09 311.26,236.256 312.5,245C 310.913,256.417 304.58,263.584 293.5,266.5C 283.716,263.4 280.216,256.734 283,246.5C 286.433,240.231 291.266,235.564 297.5,232.5 Z\\\"/></g>',\\n            '<g fill=\\\"#',\\n            colors[1],\\n            '\\\">',\\n            '<path style=\\\"opacity:1\\\" d=\\\"M 272.5,279.5 C 292.847,277.355 302.681,286.355 302,306.5C 295.71,323.559 284.21,328.392 267.5,321C 257.643,313.662 254.809,304.162 259,292.5C 262.076,286.589 266.576,282.255 272.5,279.5 Z\\\"/>',\\n            \\\"</g>\\\",\\n            '<g><path style=\\\"opacity:0.886\\\" fill=\\\"#004b85\\\" d=\\\"M 71.5,370.5 C 73.9928,370.329 75.8261,371.329 77,373.5C 73.4145,390.119 80.2479,399.453 97.5,401.5C 103.338,400.501 108.838,398.501 114,395.5C 117.668,396.504 119.002,398.837 118,402.5C 103.49,412.935 88.9903,412.769 74.5,402C 66.2866,393.39 64.4533,383.557 69,372.5C 69.9947,371.934 70.828,371.267 71.5,370.5 Z\\\"/></g>',\\n            '<g fill=\\\"#',\\n            colors[2],\\n            '\\\">',\\n            '<path style=\\\"opacity:1\\\" d=\\\"M 254.5,374.5 C 258.673,373.956 262.506,374.623 266,376.5C 269.667,385.167 273.333,393.833 277,402.5C 278.806,408.865 278.806,415.199 277,421.5C 270.637,428.074 262.804,431.574 253.5,432C 238.971,433.372 224.638,432.372 210.5,429C 199.822,424.612 198.822,418.612 207.5,411C 209.717,409.725 212.051,408.725 214.5,408C 230.182,407.036 245.182,409.869 259.5,416.5C 264.078,415.132 265.578,412.132 264,407.5C 261.77,398.248 258.77,389.248 255,380.5C 254.505,378.527 254.338,376.527 254.5,374.5 Z\\\"/>',\\n            '<path style=\\\"opacity:1\\\" d=\\\"M 100.5,307.5 C 107.766,307.575 113.599,310.575 118,316.5C 124.396,325.901 130.396,335.568 136,345.5C 138.167,347.667 140.333,349.833 142.5,352C 143.833,352.667 145.167,352.667 146.5,352C 148.5,350.667 150.5,349.333 152.5,348C 156.315,343.018 160.648,338.518 165.5,334.5C 167.607,336.53 169.607,338.697 171.5,341C 164.833,346.333 158.833,352.333 153.5,359C 150.833,361 148.167,363 145.5,365C 140.167,367 134.833,367 129.5,365C 109.201,355.533 97.5341,339.7 94.5,317.5C 94.4898,312.838 96.4898,309.505 100.5,307.5 Z\\\"/>',\\n            \\\"</g>\\\",\\n            '<g><path style=\\\"opacity:0.892\\\" fill=\\\"#004b85\\\" d=\\\"M 44.5,382.5 C 47.3646,382.055 49.8646,382.722 52,384.5C 50.2076,391.351 49.2076,398.351 49,405.5C 55.8465,429.929 70.5132,436.596 93,425.5C 96.9145,426.183 98.2478,428.517 97,432.5C 83.5484,442.567 69.715,443.067 55.5,434C 39.2325,419.494 35.5659,402.328 44.5,382.5 Z\\\"/></g>',\\n            \\\"</svg>\\\"\\n        );\\n        return\\n            string(\\n                abi.encodePacked(\\n                    \\\"data:image/svg+xml;base64,\\\",\\n                    Base64.encode(svg)\\n                )\\n            );\\n    }\\n}\",\"keccak256\":\"0x6d4625c60bd74c2eb103f6e500c66da0c7996f6e9e115eec3d049cfa80be9213\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6040608081526004908136101561001557600080fd5b600091823560e01c80634303707e1461310c578063a561b7d4146100815763e8a8d6e51461004257600080fd5b3461007d57602036600319011261007d573591600a83101561007a575061006b610076926131f2565b905191829182613156565b0390f35b80fd5b8280fd5b50913461007a578060031936011261007a5781519261009f84613182565b815b6060808210156100b757858201526020016100a1565b5050928251906100c682613182565b60603683376000194301924384116130f957600a85519460209586810191848352428983015244606083015240608082015260808152610105816131b4565b51902006808452600a8110156130e65761011e906131f2565b825261012a83516132c3565b9261013a858201948086526132c3565b600a8110156130d35761016b9161016161015489936131f2565b96888701978852516132c3565b91829101526132c3565b90600a8210156130c0576100766130a6876130b6603a8961306d8a61306861262c8c6101968d6131f2565b90818a8201525193519089519485927f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f3230898501527f30302f737667222076657273696f6e3d22312e31222077696474683d223530308c8501527f707822206865696768743d22353030707822207374796c653d2273686170652d60608501527f72656e646572696e673a67656f6d6574726963507265636973696f6e3b20746560808501527f78742d72656e646572696e673a67656f6d6574726963507265636973696f6e3b60a08501527f20696d6167652d72656e646572696e673a6f7074696d697a655175616c69747960c08501527f3b2066696c6c2d72756c653a6576656e6f64643b20636c69702d72756c653a6560e08501527f76656e6f64642220786d6c6e733a786c696e6b3d22687474703a2f2f7777772e610100850152723b999737b93397989c9c9c97bc3634b735911f60691b6101208501527f3c673e3c70617468207374796c653d226f7061636974793a302e3935342220666101338501527f696c6c3d22233132346438342220643d224d203234372e352c35372e352043206101538501527f3235322e3934312c35372e32363531203235372e3237342c35392e32363531206101738501527f3236302e352c36332e3543203237342e3430352c35372e3131203238302e34306101938501527f352c36312e34343334203237382e352c37362e3543203238372e3033322c37376101b38501527f2e31383834203239302e3533322c38312e38353531203238392c39302e3543206101d38501527f3238382e3732372c39322e33323839203238372e3839332c39332e38323839206101f38501527f3238362e352c393543203239342e3336332c3130312e353932203239342e33366102138501527f332c3130382e323538203238362e352c31313543203237372e31322c3131382e6102338501527f363235203236372e3935332c3131382e313235203235392c3131332e354320326102538501527f35352e3137362c3132302e343436203235322e3030392c3132372e37382032346102738501527f392e352c3133352e3543203239312e3531322c3133312e373633203332362e366102938501527f37382c3134352e3433203335352c3137362e3543203335392e3338392c3138316102b38501527f2e383839203336332e3338392c3138372e353536203336372c3139332e3543206102d38501527f3337342e34392c3138382e383533203338312e3135372c3138392e38353320336102f38501527f38372c3139362e3543203338382e3632392c3139322e303639203339312e31326103138501527f392c3138382e323336203339342e352c31383543203430352e3232372c3138306103338501527f2e383633203431312e3839342c3138342e333633203431342e352c3139352e356103538501527f43203431342e3136372c3139362e313637203431332e3833332c3139362e38336103738501527f33203431332e352c3139372e3543203431362e3838352c3139372e33313220346103938501527f32302e3231382c3139382e313436203432332e352c32303043203432372e31396103b38501527f322c3230342e383532203432382e3139322c3231302e313835203432362e352c6103d38501527f32313643203433332e3731352c3232312e323133203433352e3338322c3232376103f38501527f2e383739203433312e352c32333643203433322e3034352c3233392e313837206104138501527f3433322e3731312c3234322e333534203433332e352c3234352e3543203434366104338501527f2e3730392c3235322e353536203435342e3534332c3236332e353536203435376104538501527f2c3237382e3543203436312e3835352c3330362e3933203435342e3638382c336104738501527f33312e373634203433352e352c33353343203431332e38382c3337302e3231356104938501527f203339302e3231332c3337332e383832203336342e352c33363443203335382e6104b38501527f3635382c3336302e323436203335322e3939312c3335362e323436203334372e6104d38501527f352c33353243203334332e3537382c3334382e373439203334302e3431322c336104f38501527f34342e393136203333382c3334302e3543203332302e34352c3335382e3139326105138501527f203239392e3238332c3336382e383539203237342e352c3337322e35432032376105338501527f382e3432312c3338322e343235203238322e3235352c3339322e3432352032386105538501527f362c3430322e3543203239312e3231392c3431392e383935203238352e3338356105738501527f2c3433312e373239203236382e352c34333843203235302e3235392c3434322e6105938501527f333036203233312e3932352c3434322e363339203231332e352c3433394320326105b38501527f30352e3038342c3433372e373135203139382e3538342c3433332e35343820316105d38501527f39342c3432362e3543203139322e3039382c3431302e333838203139392e32366105f38501527f352c3430312e323231203231352e352c33393943203232382e3233392c3339386106138501527f2e303832203234302e3537322c3339392e393135203235322e352c3430342e356106338501527f43203235322e3833332c3430342e313637203235332e3136372c3430332e38336106538501527f33203235332e352c3430332e3543203235312e3330332c3339362e30373720326106738501527f34382e3830332c3338382e373434203234362c3338312e3543203234352e35306106938501527f352c3337392e353237203234352e3333382c3337372e353237203234352e352c6106b38501527f3337352e3543203231382e3930342c3337352e373736203139362e30372c33366106d38501527f362e373736203137372c3334382e3543203136382e3531322c3335362e3332316106f38501527f203136302e3031322c3336342e313534203135312e352c33373243203133392e6107138501527f3733322c3337372e303931203132382e3339392c3337362e303931203131372e6107338501527f352c333639432039392e303431352c3335362e3837382038382e333734382c336107538501527f33392e3837382038352e352c333138432038362e393336392c3330322e3434376107738501527f2039352e323730322c3239362e343437203131302e352c33303043203131372e6107938501527f3437392c3330322e363431203132322e3937392c3330372e313431203132372c6107b38501527f3331332e3543203133332e3235312c3332322e393939203133392e3235312c336107d38501527f33322e363636203134352c3334322e3543203135302e3533332c3333372e33306107f38501527f32203135352e372c3333312e383032203136302e352c33323643203135312e306108138501527f38352c3331302e313737203134362e3431382c3239332e3031203134362e352c6108338501527f3237342e3543203133322e3335312c3237332e343331203131392e3335312c326108538501527f36382e393331203130372e352c323631432039372e343631382c3235342e36336108738501527f352038382e323935322c3234372e3133352038302c3233382e35432037312e396108938501527f3833352c3232372e322037322e383136392c3231362e372038322e352c3230376108b38501527f432038372e333735392c3230342e3236342039322e333735392c3230332e39336108d38501527f2039372e352c32303643203131352e3332312c3231392e323437203133342e366108f38501527f35342c3232392e393134203135352e352c32333843203135392e30352c3233386109138501527f2e373834203136322e35352c3233392e363137203136362c3234302e354320316109338501527f36392e3638322c3233362e393835203137332e3138322c3233332e33313820316109538501527f37362e352c3232392e3543203135332e3533382c3232332e313835203133322e6109738501527f3230342c3231332e333532203131322e352c323030432039342e343234382c316109938501527f38352e3034342038372e393234382c3136362e3231312039332c3134332e35436109b38501527f203130302e3530372c3132392e383331203131322e3030372c3132342e3333316109d38501527f203132372e352c31323743203133322e3337332c3132372e383834203133372e6109f38501527f30342c3132392e333834203134312e352c3133312e3543203134392e3437372c610a138501527f3131362e303732203136322e33312c3130372e373339203138302c3130362e35610a338501527f43203139362e3136322c3130372e393131203230382e3832382c3131352e3234610a538501527f34203231382c3132382e3543203232312e3034372c3131372e33353820323234610a738501527f2e38382c3130362e353235203232392e352c393643203231372e3132352c3838610a938501527f2e34313433203231352e3435392c37392e303831203232342e352c3638432032610ab38501527f32392e3035352c36362e30343833203233332e3338382c36362e353438332032610ad38501527f33372e352c36392e3543203233382e3430352c36332e32373731203234312e37610af38501527f33392c35392e32373731203234372e352c35372e35205a222f3e3c2f673e0000610b1385015288693c672066696c6c3d222360b01b80610b318701528351610f4c81610b3b9685888b019101613133565b61111f60f11b9087019485018190527f3c70617468207374796c653d226f7061636974793a312220643d224d20323437610b3d8601527f2e352c36362e352043203234392e3134342c36362e32383635203235302e3634610b5d8601527f342c36362e36313938203235322c36372e3543203235322e3333332c37312e38610b7d8601527f333333203235322e3636372c37362e31363637203235332c38302e3543203235610b9d8601527f342e3538312c38332e35353334203235362e3931342c38342e3232203236302c610bbd8601527f38322e3543203236302e38342c37382e39333637203236322e3137342c37352e610bdd8601527f36303334203236342c37322e3543203236352e38372c37302e37383131203236610bfd8601527f382e3033372c36392e37383131203237302e352c36392e3543203236392e3631610c1d8601527f342c37342e39343032203236362e3934372c37392e32373335203236322e352c610c3d8601527f38322e3543203236312e3039382c38352e39363936203236322e3236342c3838610c5d8601527f2e333033203236362c38392e3543203237302e3539372c38372e323434362032610c7d8601527f37352e34332c38352e39313133203238302e352c38352e3543203238302e3635610c9d8601527f372c38362e38373334203238302e34392c38382e32303638203238302c38392e610cbd8601527f3543203237362e3831342c39322e30303339203237332e3938312c39342e3833610cdd8601527f3733203237312e352c393843203237322e3130312c39392e363035203237332e610cfd8601527f3130312c3130302e393338203237342e352c31303243203237372e3232342c31610d1d8601527f30322e3237203237392e3839312c3130322e3737203238322e352c3130332e35610d3d8601527f43203238332e3538332c3130342e333635203238332e3734392c3130352e3336610d5d8601527f35203238332c3130362e3543203237392e3936312c3130372e36303820323736610d7d8601527f2e3739342c3130382e323735203237332e352c3130382e3543203236382e3337610d9d8601527f372c3130372e303731203236332e32312c3130352e373338203235382c313034610dbd8601527f2e3543203235332e3236352c3130342e353635203235302e3236352c3130362e610ddd8601527f383938203234392c3131312e3543203234352e34372c3132302e343233203234610dfd8601527f322e3133372c3132392e343233203233392c3133382e3543203233342e39372c610e1d8601527f3134302e343536203233302e3830332c3134322e313232203232362e352c3134610e3d8601527f332e3543203232352e33342c3133392e353431203232352e3137332c3133352e610e5d8601527f353431203232362c3133312e3543203232382e3836382c3132332e3232382032610e7d8601527f33312e3533352c3131342e383935203233342c3130362e3543203233362e3035610e9d8601527f332c3130322e323236203233382e3231392c39382e30353937203234302e352c610ebd8601527f393443203234302e3431352c39322e38393236203234302e3038312c39312e38610edd8601527f393236203233392e352c393143203233352e3538312c38392e34353937203233610efd8601527f322e3038312c38372e32393331203232392c38342e3543203232362e38372c38610f1d8601527f312e33333531203232372e3033372c37382e33333531203232392e352c37352e610f3d8601527f3543203233332e3136372c37372e36363637203233362e3833332c37392e3833610f5d8601527f3333203234302e352c383243203234322e3730312c38322e3832343920323434610f7d8601527f2e3533342c38322e33323439203234362c38302e3543203234362e3232332c37610f9d8601527f352e37353033203234362e3732332c37312e30383336203234372e352c36362e610fbd860152651a902d11179f60d11b610fdd8601527f3c70617468207374796c653d226f7061636974793a312220643d224d20343030610fe38601527f2e352c3139312e352043203430332e3438352c3139312e383138203430352e316110038601527f35322c3139332e343835203430352e352c3139362e3543203430342e3633312c6110238601527f3139392e393431203430332e3436342c3230332e323734203430322c3230362e6110438601527f3543203430302e3038372c3231322e303934203430312e39322c3231342e32366110638601527f31203430372e352c32313343203431302e3934312c3231312e323234203431346110838601527f2e3130382c3230392e303537203431372c3230362e3543203431382e3531382c6110a38601527f3230382e363134203431382e3835312c3231302e393437203431382c3231332e6110c38601527f3543203430372e3831352c3232342e303735203430392e3938322c3232382e306110e38601527f3735203432342e352c3232352e3543203432342e352c3232362e3833332034326111038601527f342e352c3232382e313637203432342e352c3232392e3543203432322e3134336111238601527f2c3232392e333337203431392e38312c3232392e353033203431372e352c32336111438601527f3043203431342e3833332c3233322e363637203431342e3833332c3233352e336111638601527f3333203431372e352c32333843203432302e3030372c3233382e3039332034326111838601527f322e3137342c3233382e393236203432342c3234302e3543203432342e3731316111a38601527f2c3234322e333637203432342e3231312c3234332e383637203432322e352c326111c38601527f343543203431322e3437382c3234352e343836203430322e3437382c3234362e6111e38601527f313533203339322e352c32343743203339302e3236342c3235302e31343520336112038601527f38382e3736342c3235332e363435203338382c3235372e3543203337392e31396112238601527f362c3236392e363034203337302e3032392c3238312e343338203336302e352c6112438601527f32393343203335312e38372c3239392e393631203334332e3533372c3330372e6112638601527f323935203333352e352c33313543203332382e38322c3332302e3536203332316112838601527f2e3135342c3332322e383933203331322e352c33323243203331312e3833332c6112a38601527f3332312e333333203331312e3136372c3332302e363637203331302e352c33326112c38601527f3043203332302e3631372c3331362e353235203332392e3131372c3331302e366112e38601527f3931203333362c3330322e3543203335302e3037392c3238322e3638203336336113038601527f2e3431332c3236322e333436203337362c3234312e3543203337392e3433392c6113238601527f3233352e373934203338312e3237332c3232392e363237203338312e352c32326113438601527f3343203338312e3538362c3231362e333338203337392e3038362c3231302e386113638601527f3338203337342c3230362e3543203337312e3138382c3230312e3736392033376113838601527f322e3335352c3139392e363032203337372e352c32303043203337392e3833336113a38601527f2c3230322e333333203338322e3136372c3230342e363637203338342e352c326113c38601527f303743203338362e3931342c3230382e383835203338392e3538312c3230392e6113e38601527f353532203339322e352c32303943203339342e3133392c3230352e37343120336114038601527f39352e3330362c3230322e323431203339362c3139382e3543203339372e30316114238601527f322c3139352e373938203339382e3531322c3139332e343635203430302e352c61144386015269189c98971a902d11179f60b11b611463860152631e17b39f60e11b61146d86018190527f3c673e3c70617468207374796c653d226f7061636974793a31222066696c6c3d61147187018190527f22236534303531332220643d224d203137342e352c3131352e352043203138376114918801527f2e32322c3131352e323338203139382e3035342c3131392e353731203230372c6114b18801527f3132382e3543203231302e3131312c3133322e333837203231322e3434342c316114d18801527f33362e3732203231342c3134312e3543203231342e3735352c3134342e3330336114f18801527f203231342e3432322c3134362e3937203231332c3134392e3543203230352e306115118801527f36382c3135352e343238203139372e3733352c3136322e303935203139312c316115318801527f36392e3543203137382e3538382c3135372e333036203136352e3235342c31346115518801527f362e333036203135312c3133362e3543203135302e3837352c3133312e3235336115718801527f203135332e3034312c3132372e303837203135372e352c31323443203136322e6115918801527f39382c3132302e353933203136382e3634372c3131372e3736203137342e352c6115b18801526d18989a971a902d11179f1e17b39f60911b6115d18801526115df87018190527f22236535303231322220643d224d203131342e352c3133352e352043203132346115ff8801527f2e3737322c3133342e393835203133342e3433392c3133372e3135312031343361161f8801527f2e352c31343243203135382e3635382c3135312e383137203137322e3635382c61163f8801527f3136332e313531203138352e352c31373643203138382e3530382c3137382e3761165f8801527f3534203139322e3030382c3138302e353837203139362c3138312e354320323061167f8801527f302e3430332c3138302e343132203230312e35372c3137372e3734352031393961169f8801527f2e352c3137332e3543203230382e3138382c3136322e303031203231392e35326116bf8801527f312c3135342e313637203233332e352c31353043203237312e37332c3133382e6116df8801527f333132203330362e3036332c3134352e333132203333362e352c3137314320336116ff8801527f35322e3433362c3138342e303337203336322e3933362c3230302e353337203361171f8801527f36382c3232302e3543203336392e3134352c3232352e373939203336392e343761173f8801527f382c3233312e313332203336392c3233362e3543203335362e3939362c32353761175f8801527f2e313832203334332e3939362c3237372e313832203333302c3239362e35432061177f8801527f3332322e3431312c3330352e31203331332e3037372c3331302e37363620333061179f8801527f322c3331332e3543203330302e3437332c3332312e3238203330332e3330362c6117bf8801527f3332362e3738203331302e352c33333043203331352e352c3333302e363637206117df8801527f3332302e352c3333302e363637203332352e352c33333043203333312e3434396117ff8801527f2c3332382e303237203333362e3738332c3332352e303237203334312e352c3361181f8801527f323143203335332e3630342c3331302e383939203336352e3130342c3330302e61183f8801527f303635203337362c3238382e3543203338312e3934372c3237392e353533203361185f8801527f38382e32382c3237302e383836203339352c3236322e3543203339362e37343161187f8801527f2c3235392e363931203339372e3930382c3235362e363931203339382e352c3261189f8801527f35332e3543203430382e3038382c3235352e313135203431372e3538382c32356118bf8801527f342e373831203432372c3235322e3543203433392e3633372c3235382e3438396118df8801527f203434362e39372c3236382e343839203434392c3238322e3543203435312e376118ff8801527f2c3330332e373039203434372e3033342c3332332e303432203433352c33343061191f8801527f2e3543203432302e3231332c3335362e303831203430322e3034362c3336322e61193f8801527f393134203338302e352c33363143203336372e3436362c3335362e333033203361195f8801527f35362e332c3334382e383033203334372c3333382e3543203334362e3431342c61197f8801527f3332392e333233203334322e3234372c3332372e313536203333342e352c333361199f8801527f3243203331342e3638322c3335312e393036203239302e3638322c3336332e326119bf8801527f34203236322e352c33363643203231392e3533392c3337312e363032203138376119df8801527f2e3337322c3335352e373638203136362c3331382e3543203135372e3138392c6119ff8801527f3330312e393739203135342e3138392c3238342e363436203135372c3236362e611a1f8801527f3543203135352e3931352c3236352e373037203135342e3734382c3236352e30611a3f8801527f34203135332e352c3236342e3543203134382e3238332c3236362e3934352031611a5f8801527f34322e3934392c3236372e313131203133372e352c32363543203131382e3638611a7f8801527f2c3235382e343936203130322e31382c3234382e3332392038382c3233342e35611a9f8801527f432038342e353932362c3233302e3337322038322e3932362c3232352e373035611abf8801527f2038332c3232302e35432038342e3537382c3231352e3133312038382e303738611adf8801527f2c3231322e3936352039332e352c32313443203130392e3030392c3232342e39611aff8801527f3236203132352e3334322c3233342e353933203134322e352c32343343203135611b1f8801527f312e3430392c3234372e3233203136302e3734322c3234382e38393620313730611b3f8801527f2e352c32343843203137372e3031372c3234322e313438203138322e38352c32611b5f8801527f33352e363438203138382c3232382e3543203138382e39322c3232352e363932611b7f8801527f203138382e3038372c3232332e353235203138352e352c32323243203138312e611b9f8801527f3235312c3232302e383734203137362e3931382c3232302e323038203137322e611bbf8801527f352c32323043203135352e3533332c3231332e363833203133392e3139392c32611bdf8801527f30362e303136203132332e352c31393743203130372e3033332c3138352e3839611bff8801527f392039392e313939342c3137302e333939203130302c3135302e354320313032611c1f8801527f2e3335312c3134322e393834203130372e3138342c3133372e39383420313134611c3f88015270171a9618999a971a902d11179f1e17b39f60791b611c5f880152611c7087018190527f22233137346338332220643d224d203232392e352c3137302e35204320323433611c908801527f2e3434312c3136382e373032203234382e3934312c3137342e37303220323436611cb08801527f2c3138382e3543203234322e3938332c3230312e323532203233352e3438332c611cd08801527f3230352e343138203232332e352c32303143203231362e3530372c3139332e39611cf08801527f3035203231352e3637332c3138362e303731203232312c3137372e3543203232611d108801527f332e3632382c3137342e3739203232362e3436312c3137322e34353620323239611d3088015270171a96189b98171a902d11179f1e17b39f60791b611d50880152611d618701527f22233135346338332220643d224d203239372e352c3233322e35204320333036611d818701527f2e32362c3233322e3039203331312e32362c3233362e323536203331322e352c611da18701527f32343543203331302e3931332c3235362e343137203330342e35382c3236332e611dc18701527f353834203239332e352c3236362e3543203238332e3731362c3236332e342032611de18701527f38302e3231362c3235362e373334203238332c3234362e3543203238362e3433611e018701527f332c3234302e323331203239312e3236362c3233352e353634203239372e352c611e218701526d191999171a902d11179f1e17b39f60911b611e41870152611e4f8601839052845190959194611e59948693916126979184918885019101613133565b01928301527f3c70617468207374796c653d226f7061636974793a312220643d224d20323732611e5b8301527f2e352c3237392e352043203239322e3834372c3237372e333535203330322e36611e7b8301527f38312c3238362e333535203330322c3330362e3543203239352e37312c333233611e9b8301527f2e353539203238342e32312c3332382e333932203236372e352c333231432032611ebb8301527f35372e3634332c3331332e363632203235342e3830392c3330342e3136322032611edb8301527f35392c3239322e3543203236322e3037362c3238362e353839203236362e3537611efb8301527f362c3238322e323535203237322e352c3237392e35205a222f3e000000000000611f1b83015283611f358301527f3c673e3c70617468207374796c653d226f7061636974793a302e383836222066611f398301527f696c6c3d22233030346238352220643d224d2037312e352c3337302e35204320611f598301527f37332e393932382c3337302e3332392037352e383236312c3337312e33323920611f798301527f37372c3337332e35432037332e343134352c3339302e3131392038302e323437611f998301527f392c3339392e3435332039372e352c3430312e3543203130332e3333382c3430611fb98301527f302e353031203130382e3833382c3339382e353031203131342c3339352e3543611fd98301527f203131372e3636382c3339362e353034203131392e3030322c3339382e383337611ff98301527f203131382c3430322e3543203130332e34392c3431322e3933352038382e39396120198301527f30332c3431322e3736392037342e352c343032432036362e323836362c3339336120398301527f2e33392036342e343533332c3338332e3535372036392c3337322e35432036396120598301527f2e393934372c3337312e3933342037302e3832382c3337312e3236372037312e6120798301526f1a96199b98171a902d11179f1e17b39f60811b6120998301526120a9820152835190612997826120b3968d8885019101613133565b01928301527f3c70617468207374796c653d226f7061636974793a312220643d224d203235346120b58301527f2e352c3337342e352043203235382e3637332c3337332e393536203236322e356120d58301527f30362c3337342e363233203236362c3337362e3543203236392e3636372c33386120f58301527f352e313637203237332e3333332c3339332e383333203237372c3430322e35436121158301527f203237382e3830362c3430382e383635203237382e3830362c3431352e3139396121358301527f203237372c3432312e3543203237302e3633372c3432382e303734203236322e6121558301527f3830342c3433312e353734203235332e352c34333243203233382e3937312c346121758301527f33332e333732203232342e3633382c3433322e333732203231302e352c3432396121958301527f43203139392e3832322c3432342e363132203139382e3832322c3431382e36316121b58301527f32203230372e352c34313143203230392e3731372c3430392e373235203231326121d58301527f2e3035312c3430382e373235203231342e352c34303843203233302e3138322c6121f58301527f3430372e303336203234352e3138322c3430392e383639203235392e352c34316122158301527f362e3543203236342e3037382c3431352e313332203236352e3537382c3431326122358301527f2e313332203236342c3430372e3543203236312e37372c3339382e32343820326122558301527f35382e37372c3338392e323438203235352c3338302e3543203235342e3530356122758301527f2c3337382e353237203235342e3333382c3337362e353237203235342e352c33612295830152681b9a171a902d11179f60b91b6122b58301527f3c70617468207374796c653d226f7061636974793a312220643d224d203130306122be8301527f2e352c3330372e352043203130372e3736362c3330372e353735203131332e356122de8301527f39392c3331302e353735203131382c3331362e3543203132342e3339362c33326122fe8301527f352e393031203133302e3339362c3333352e353638203133362c3334352e354361231e8301527f203133382e3136372c3334372e363637203134302e3333332c3334392e38333361233e8301527f203134322e352c33353243203134332e3833332c3335322e363637203134352e61235e8301527f3136372c3335322e363637203134362e352c33353243203134382e352c33353061237e8301527f2e363637203135302e352c3334392e333333203135322e352c3334384320313561239e8301527f362e3331352c3334332e303138203136302e3634382c3333382e3531382031366123be8301527f352e352c3333342e3543203136372e3630372c3333362e3533203136392e36306123de8301527f372c3333382e363937203137312e352c33343143203136342e3833332c3334366123fe8301527f2e333333203135382e3833332c3335322e333333203135332e352c333539432061241e8301527f3135302e3833332c333631203134382e3136372c333633203134352e352c333661243e8301527f3543203134302e3136372c333637203133342e3833332c333637203132392e3561245e8301527f2c33363543203130392e3230312c3335352e3533332039372e353334312c333361247e8301527f392e372039342e352c3331372e35432039342e343839382c3331322e3833382061249e8301527f39362e343839382c3330392e353035203130302e352c3330372e35205a222f3e6124be830152806124de8301527f3c673e3c70617468207374796c653d226f7061636974793a302e3839322220666124e28301527f696c6c3d22233030346238352220643d224d2034342e352c3338322e352043206125028301527f34372e333634362c3338322e3035352034392e383634362c3338322e373232206125228301527f35322c3338342e35432035302e323037362c3339312e3335312034392e3230376125428301527f362c3339382e3335312034392c3430352e35432035352e383436352c3432392e6125628301527f3932392037302e353133322c3433362e3539362039332c3432352e35432039366125828301527f2e393134352c3432362e3138332039382e323437382c3432382e3531372039376125a28301527f2c3433322e35432038332e353438342c3434322e3536372036392e3731352c346125c28301527f34332e3036372035352e352c343334432033392e323332352c3431392e3439346125e28301527f2033352e353635392c3430322e3332382034342e352c3338322e35205a222f3e612602830152612622820152651e17b9bb339f60d11b6126268201520361260c8101845201826131d0565b613336565b845195827f646174613a696d6167652f7376672b786d6c3b6261736536342c000000000000889485015282519283918686019101613133565b810103601a8101855201836131d0565b5191829182613156565b634e487b7160e01b815260328752602490fd5b634e487b7160e01b835260328852602483fd5b634e487b7160e01b825260328752602482fd5b634e487b7160e01b815260118652602490fd5b50913461007a57602036600319011261007a575061312c602092356132c3565b9051908152f35b60005b8381106131465750506000910152565b8181015183820152602001613136565b604091602082526131768151809281602086015260208686019101613133565b601f01601f1916010190565b6060810190811067ffffffffffffffff82111761319e57604052565b634e487b7160e01b600052604160045260246000fd5b60a0810190811067ffffffffffffffff82111761319e57604052565b90601f8019910116810190811067ffffffffffffffff82111761319e57604052565b90604051906000835490600182811c908084169687156132b9575b60209485841089146132a557879884899798995290816000146132835750600114613244575b505050613242925003836131d0565b565b600090815285812095935091905b81831061326b5750506132429350820101388080613233565b85548884018501529485019487945091830191613252565b9250505061324294925060ff191682840152151560051b820101388080613233565b634e487b7160e01b85526022600452602485fd5b91607f169161320d565b60001943019043821161330457600a916040519060208201928352426040830152446060830152406080820152608081526132fd816131b4565b5190200690565b634e487b7160e01b600052601160045260246000fd5b67ffffffffffffffff811161319e57601f01601f191660200190565b8051156134895760405161334981613182565b604081527f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f604082015281516002928382018092116133045760039182900480851b94906001600160fe1b0381160361330457926133e56133cf8661331a565b956133dd60405197886131d0565b80875261331a565b6020860190601f190136823793829183518401925b83811061343857505050505106806001146134255760021461341a575090565b603d90600019015390565b50603d9081600019820153600119015390565b85600491979293949701918251600190603f9082828260121c16880101518453828282600c1c16880101518385015382828260061c16880101518885015316850101518782015301959291906133fa565b506040516020810181811067ffffffffffffffff82111761319e57604052600081529056fea26469706673582212209c366054ebc0465c7f78f2f61e554993f9c899a478767abb02325fc50d13bc5b64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4403,
        "contract": "contracts/Character2.sol:Character2",
        "label": "colorNames",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_string_storage)10_storage"
      }
    ],
    "types": {
      "t_array(t_string_storage)10_storage": {
        "base": "t_string_storage",
        "encoding": "inplace",
        "label": "string[10]",
        "numberOfBytes": "320"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}